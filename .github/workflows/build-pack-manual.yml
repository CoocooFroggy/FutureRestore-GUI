name: Build, Pack; Manual

# Controls when the action will run. 
on:
  # Triggers the workflow on push but only for the master branch
  workflow_dispatch:

jobs:
  build-and-setup:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Parse version
        id: parse-version
        run: |
          version=$(cat src/main/java/Main.java | grep -Po '(?<=futureRestoreGUIVersion = \").*(?=\")')
          echo $version > version.txt
          echo '::set-output name=version::(echo $version)'

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Jar
        run: ./gradlew shadowJar
      # Upload this built jar
      - name: Upload final jar
        uses: actions/upload-artifact@v2
        with:
          name: fat-jar
          path: ./build/libs/FutureRestore GUI-1.0-all.jar

      - name: Upload version
        uses: actions/upload-artifact@v2
        with:
          name: version
          path: version.txt

  ubuntu-pack:
    needs: [ build-and-setup ]
    runs-on: ubuntu-latest
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Download final jar
        uses: actions/download-artifact@v2
        with:
          name: fat-jar
          path: ./input

      - name: Download version
        uses: actions/download-artifact@v2
        with:
          name: version
      - name: Output version
        id: output-version
        run: |
          version=$(tail version.txt)
          echo "::set-output name=version::$version"

      - name: Run JPackage deb
        env:
          RUN_NUMBER: ${{ github.run_number }}
          VERSION: ${{ steps.output-version.outputs.version }}
        run: jpackage --input ./input --name "FutureRestore GUI" --main-jar "FutureRestore GUI-1.0-all.jar" --main-class Main --type deb --icon ./.github/workflows/ubuntu/Icon-1024.png --copyright "© CoocooFroggy 2021" --verbose --name "FutureRestore GUI" --module-path ./.github/workflows/ubuntu/javafx-jmods-11.0.2 --add-modules javafx.swing,java.logging,java.sql,java.base,jdk.crypto.ec,java.naming --app-version $VERSION 2>&1 | tee /tmp/jpackoutput.txt
      - name: Grep DEB name
        id: grep_deb_name
        run: |
          deb_name=$(grep -Po '(?<=Package \(.deb\) saved to: ).*(?=.)' /tmp/jpackoutput.txt)
          echo "::set-output name=deb_filename::$deb_name"

      - name: Run JPackage app-image
        env:
          RUN_NUMBER: ${{ github.run_number }}
          VERSION: ${{ steps.output-version.outputs.version }}
        run: jpackage --input ./input --name "FutureRestore GUI" --main-jar "FutureRestore GUI-1.0-all.jar" --main-class Main --type app-image --icon ./.github/workflows/ubuntu/Icon-1024.png --copyright "© CoocooFroggy 2021" --verbose --name "FutureRestore GUI" --module-path ./.github/workflows/ubuntu/javafx-jmods-11.0.2 --add-modules javafx.swing,java.logging,java.sql,java.base,jdk.crypto.ec,java.naming --app-version $VERSION

      - name: Zip app-image and script
        run: |
          cp ./.github/workflows/ubuntu/"Run FutureRestore GUI.sh" ./
          zip -r FutureRestore-GUI-Linux-Universal.zip "FutureRestore GUI" "Run FutureRestore GUI.sh"

      - name: Upload deb
        uses: actions/upload-artifact@v2
        with:
          name: FutureRestore-GUI-Debian-${{ steps.output-version.outputs.version }}.deb
          path: ${{ steps.grep_deb_name.outputs.deb_filename }}
          
      - name: Upload app image
        uses: actions/upload-artifact@v2
        with:
          name: FutureRestore-GUI-Linux-Universal-${{ steps.output-version.outputs.version }}.zip
          path: FutureRestore-GUI-Linux-Universal.zip

  macos-pack:
    needs: [ build-and-setup ]
    runs-on: macos-latest
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Download final jar
        uses: actions/download-artifact@v2
        with:
          name: fat-jar
          path: ./input

      - name: Download version
        uses: actions/download-artifact@v2
        with:
          name: version
      - name: Output version
        id: output-version
        run: |
          version=$(tail version.txt)
          echo "::set-output name=version::$version"

      - name: Run JPackage and remove signature
        env:
          RUN_NUMBER: ${{ github.run_number}}
          VERSION: ${{ steps.output-version.outputs.version }}
        run: |
          jpackage --input ./input --main-jar "FutureRestore GUI-1.0-all.jar" --main-class Main --type app-image --icon ./.github/workflows/mac/FutureRestoreGUIIcons.icns --copyright "© CoocooFroggy 2021" --verbose --mac-package-identifier com.coocoofroggy.futurerestoregui --name "FutureRestore GUI" --module-path ./.github/workflows/mac/javafx-jmods-11.0.2 --add-modules javafx.swing,java.logging,java.sql,java.base,jdk.crypto.ec,java.naming --app-version $VERSION
          codesign --remove-signature FutureRestore\ GUI.app
          mkdir dmg-input
          mv "FutureRestore GUI.app" dmg-input

#      - name: Debug with ssh
#        uses: lhotari/action-upterm@v1

      - name: Create DMG from .app
        run: |
          create-dmg --hdiutil-quiet --volname "FutureRestore GUI Installer" --volicon ".github/workflows/mac/DMG Images/FRGUI-Drive-Icon.icns" --background ".github/workflows/mac/DMG Images/DMG-Background.png" --window-pos 200 120 --window-size 600 342 --icon-size 100 --icon "FutureRestore GUI.app" 80 200 --hide-extension "FutureRestore GUI.app" --app-drop-link 450 200 "FutureRestore GUI Installer.dmg" "dmg-input/"

#      - name: Zip .app
#        id: zip_app
#        run: zip -r FutureRestore-GUI-Mac.zip "FutureRestore GUI.app"
        
      - name: Upload Mac release
        uses: actions/upload-artifact@v2
        with:
          name: FutureRestore-GUI-Mac-${{ steps.output-version.outputs.version }}.dmg
          path: FutureRestore GUI Installer.dmg

  windows-pack:
    needs: [ build-and-setup ]
    runs-on: windows-latest
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Download final jar
        uses: actions/download-artifact@v2
        with:
          name: fat-jar
          path: ./input

      - name: Download version
        uses: actions/download-artifact@v2
        with:
          name: version
      - name: Output version
        id: output-version
        run: |
          FOR /F "tokens=*" %%g IN ('tail version.txt') do (SET version=%%g)
          echo ::set-output name=version::%version%
        shell: cmd

      - name: Run JPackage
        env:
          RUN_NUMBER: ${{ github.run_number }}
          VERSION: ${{ steps.output-version.outputs.version }}
        run: jpackage --input ./input --name "FutureRestore GUI" --main-jar "FutureRestore GUI-1.0-all.jar" --main-class Main --type msi --icon ./.github/workflows/windows/FRWindows.ico --copyright "© CoocooFroggy 2021" --vendor "CoocooFroggy" --verbose --name "FutureRestore GUI" --win-shortcut --win-menu --win-console --module-path ./.github/workflows/windows/javafx-jmods-11.0.2 --add-modules javafx.swing,java.logging,java.sql,java.base,jdk.crypto.ec,java.naming --app-version %VERSION%
        shell: cmd

      - name: Find MSI name
        id: grep_msi_name
        run: |
          FOR /F "tokens=*" %%g IN ('ls *.msi') do (SET msi_name=%%g)
          echo ::set-output name=msi_filename::%msi_name%
        # Otherwise it tries powershell
        shell: cmd
        
      - name: Upload Windows release
        uses: actions/upload-artifact@v2
        with:
          name: FutureRestore-GUI-Windows-${{ steps.output-version.outputs.version }}.msi
          path: ${{ steps.grep_msi_name.outputs.msi_filename }}
